{"version":3,"sources":["actions/config.js","components/Card.js","components/Sliders.js","actions/actions.js","components/App.js","components/history.js","components/Navbar.js","components/Search.js","components/GenreCard.js","components/MovieDetails.js","App.js","serviceWorker.js","index.js"],"names":["API_KEY","IMAGE_PATH","Card","data","movie","concat","id","react_default","a","createElement","className","react_router_dom","to","poster_path","src","alt","title","length","substring","Sliders","popular","_useState","useState","_useState2","Object","slicedToArray","pfetchedData","psetFetchedData","useEffect","getPData","response","axios","get","then","res","results","console","log","catch","err","GetPopular","latest","_useState3","_useState4","lfetchedData","lsetFetchedData","getLData","GetLatest","Fragment","map","key","App","props","components_Sliders","createBrowserHistory","withRouter","input","setInput","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onSubmit","e","history","push","preventDefault","query","placeholder","onChange","target","value","href","Search","setdata","searchHandler","match","params","GenreCard","genre","name","MovieDetails","setMovie","similar","setSimilar","_useState5","_useState6","genres","setGenres","getDetails","getSimilar","movieURL","Axios","similarUrl","url","height","tagline","components_GenreCard","vote_average","release_date","runtime","overview","simMovie","react_router","components_Navbar","components_App","path","component","Main","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3c8e7582.chunk.js","sourcesContent":["export const API_KEY = 'c645dcc21f030eac638c9901d9a1d96b'\r\nexport const IMAGE_PATH = 'https://image.tmdb.org/t/p/w500'","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {IMAGE_PATH} from '../actions/config'\r\n\r\n\r\nexport default function Card(data) {\r\n  const movie = `/movie/${data.data.id}`\r\n  return (\r\n   <div className=\"\" id=\"card\">\r\n   <Link to={movie}>\r\n      {data.data.poster_path ? <img src={IMAGE_PATH + data.data.poster_path } alt={data.data.title} />:<img src=\"https://www.classicposters.com/images/nopicture.gif\" alt=\"not found\" />}\r\n      <span className=\"centered\">{data.data.title.length > 25 ? data.data.title = data.data.title.substring(0,25):data.data.title }</span>\r\n      </Link>\r\n   </div>\r\n  )\r\n}","import React from \"react\";\r\nimport Card from './Card'\r\nimport {GetPopular, GetLatest}  from '../actions/actions'\r\n\r\n\r\nconst Sliders = () => {\r\n  \r\n    const popular = GetPopular()\r\n    const latest = GetLatest()\r\n    \r\n    const content = (\r\n        <React.Fragment>\r\n          <div id=\"movies\">\r\n            <div className=\"container-fluid\">\r\n            <div className=\"col-md-12 line\">\r\n              <h1>Popular Movies</h1>\r\n            </div>\r\n              <div className=\"col-md-12\">\r\n                <div className=\"row\">\r\n                    {popular.map(data => (\r\n                        <Card data={data} key={data.id}/>\r\n                      ))} \r\n                </div>\r\n              </div>\r\n          </div>\r\n          <div className=\"container-fluid\">\r\n          <div className=\"col-md-12 line\">\r\n            <h1>Latest Movies</h1>\r\n          </div>\r\n            <div className=\"col-md-12\">\r\n              <div className=\"row\">\r\n                {latest.map(data => (\r\n                    <Card data={data} key={data.id} />\r\n                ))} \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n\r\n    return content\r\n}\r\n\r\nexport default Sliders","import {useState, useEffect} from 'react'\r\nimport {API_KEY} from './config'\r\nimport axios from 'axios';\r\n\r\n export const GetPopular = () => {\r\n\r\n    const [pfetchedData, psetFetchedData] = useState([])\r\n\r\n    useEffect(() => {\r\n        getPData()\r\n    },[])\r\n\r\n\r\n    const getPData = (() => {\r\n        let response = ''\r\n        axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&page=1`)\r\n        .then(res => {\r\n            response = res.data.results\r\n            console.log(response)\r\n            psetFetchedData(response)\r\n        })\r\n        .catch(err => console.log(err))\r\n\r\n    })\r\n    \r\n    return pfetchedData\r\n\r\n}\r\n\r\nexport const GetLatest = () => {\r\n\r\n    const [lfetchedData, lsetFetchedData] = useState([])\r\n\r\n    useEffect(() => {\r\n        getLData()\r\n    },[])\r\n\r\n    const getLData = (() => {\r\n        let response = ''\r\n        axios.get(`https://api.themoviedb.org/3/movie/now_playing?api_key=${API_KEY}&language=en-US&page=1`)\r\n        .then(res => {\r\n            response = res.data.results\r\n            console.log(response)\r\n            lsetFetchedData(response)\r\n        })\r\n        .catch(err => console.log(err))\r\n\r\n    })\r\n\r\n    return lfetchedData\r\n}\r\n\r\n// export const Search = (query) => {\r\n\r\n//     const [data, setdata] = useState([])\r\n\r\n//     useEffect(() => {\r\n//         getSData()\r\n//     },[])\r\n\r\n//     const getSData = (() => {\r\n//         let response = ''\r\n//         axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`)\r\n//         .then(res => {\r\n//             response = res.data.results\r\n//             // console.log(response)\r\n//             setdata(response)\r\n//         })\r\n//         .catch(err => console.log(err))\r\n\r\n//         // return response\r\n\r\n//     })\r\n\r\n//     return data\r\n// }\r\n\r\n// export const Search = (query) => {\r\n\r\n//     const [search, setSearch] = useState()\r\n\r\n//     axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}\r\n//     `)\r\n//     .then((data) => setSearch(data))\r\n//     .catch(err => console.log(err))\r\n\r\n\r\n//     return search\r\n// }\r\n","import React from 'react'\r\nimport Sliders from './Sliders';\r\n\r\nconst App = (props) => {\r\n\r\n    \r\n\r\n    const data = (\r\n        <Sliders />\r\n    )\r\n  \r\n    return data\r\n}\r\n\r\nexport default App;","import { createBrowserHistory } from 'history'\r\n\r\nexport default createBrowserHistory()","import React, {useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport history from './history'\r\n\r\n\r\nconst Navbar = (props) => {\r\n\r\n    const [input, setInput] = useState('')\r\n    \r\n    const submitHandler = (e) => {\r\n        history.push('')\r\n        e.preventDefault()\r\n        // Search(input);\r\n        let query = `/search/${input}`\r\n        console.log(query)\r\n        history.push(query)\r\n    }\r\n\r\n    const content = (\r\n       <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark \">\r\n                <Link className=\"navbar-brand\" to=\"/\">React Movies </Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExample03\" aria-controls=\"navbarsExample03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarsExample03\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <form className=\"form-inline my-2 my-lg-0\" onSubmit={submitHandler}>\r\n                            <input className=\"form-control mr-sm-4\" type=\"search\" placeholder=\"Search Movie\" aria-label=\"Search\" onChange={(e) => setInput(e.target.value)}/>\r\n                            <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                        </form>\r\n                        <li className=\"nav-item active\">\r\n                        <a className=\"nav-link\" href=\"/\"><span className=\"sr-only\">(current)</span></a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item dropdown ml-auto\">\r\n                        <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"dropdown03\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</a>\r\n                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdown03\">\r\n                            <a className=\"dropdown-item\" href=\"/\">Action</a>\r\n                            <a className=\"dropdown-item\" href=\"/\">Another action</a>\r\n                            <a className=\"dropdown-item\" href=\"/\">Something else here</a>\r\n                        </div>\r\n                        </li> */}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n       </div>\r\n    )\r\n    return  content\r\n}\r\n\r\nexport default withRouter(Navbar);","import React, {useState, useEffect} from 'react'\r\nimport {API_KEY} from '../actions/config'\r\nimport axios from 'axios'\r\n\r\n// import {GetLatest as searchAction}  from '../actions/actions'\r\nimport Card from './Card'\r\n\r\n\r\nconst Search = (props) => {\r\n    const [data, setdata] = useState([])\r\n    // const searchData = searchAction()\r\n    // console.log(props.match.params.query)\r\n    // console.log(popular)\r\n\r\n    useEffect(() => {\r\n        searchHandler()\r\n    },[props.match.params.query])\r\n\r\n    const searchHandler = () => {\r\n        const query = props.match.params.query\r\n        let response = ''\r\n        axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`)\r\n        .then(res => {\r\n            response = res.data.results\r\n            console.log(response)\r\n            setdata(response)\r\n        })\r\n        .catch(err => console.log(err))\r\n\r\n    }\r\n\r\n    const content = (\r\n            <React.Fragment>\r\n                  <div className=\"container-fluid\">\r\n                    <div className=\"col-md-12\">\r\n                      <div className=\"row\">\r\n                          {data.map(data => (\r\n                              <Card data={data} key={data.id}/>\r\n                            ))} \r\n                            \r\n                      </div>\r\n                    </div>\r\n                </div>\r\n                </React.Fragment>\r\n          )\r\n  return content\r\n}\r\n\r\nexport default Search","import React from 'react'\r\n\r\nconst GenreCard = (genre) => {\r\n    return (\r\n        <React.Fragment>\r\n           <span className=\"badge badge-secondary\" id=\"genreCard\">{genre.data.name}</span>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default GenreCard","import React, {useEffect, useState} from 'react'\r\nimport Axios from 'axios';\r\nimport { API_KEY,IMAGE_PATH } from '../actions/config';\r\nimport Card from './Card'\r\nimport GenreCard from './GenreCard'\r\n\r\n\r\nconst MovieDetails = (props) => {\r\n\r\n    const [movie, setMovie] = useState([])\r\n    const [similar, setSimilar] = useState([])\r\n    const [genres, setGenres] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        getDetails()\r\n        getSimilar()\r\n    }, [props.match.params.id])\r\n\r\n    const getDetails = () => {\r\n        const movieURL = `https://api.themoviedb.org/3/movie/${props.match.params.id}?api_key=${API_KEY}&language=en-US`\r\n        Axios.get(movieURL)\r\n        .then(data => {\r\n            console.log(data.data)\r\n            setMovie(data.data)\r\n            setGenres(data.data.genres)\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    const getSimilar = () => {\r\n        const similarUrl = `https://api.themoviedb.org/3/movie/${props.match.params.id}/similar?api_key=${API_KEY}&language=en-US&page=1`\r\n        Axios.get(similarUrl)\r\n        .then(data => {\r\n            // console.log(data.data.results)\r\n            setSimilar(data.data.results)})\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    const url = `${IMAGE_PATH+movie.poster_path}`\r\n\r\n    // const genres = movie.genres\r\n\r\n    const content = (\r\n        \r\n        <React.Fragment>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"col-md-10 offset-md-1\" >\r\n                    <div className=\"row\" id=\"movieDetailsPane\">\r\n                        <div className=\"col-md-4\">\r\n                            <img src={url} className=\"\" alt=\"\" height=\"600px\"/>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div>\r\n                                <h1> {movie.title}</h1>\r\n                                <h3>{movie.tagline}</h3>\r\n                                <h3 >{genres.map(genre => (\r\n                                    <GenreCard data={genre} key={genre.name} />\r\n                                ))} </h3>\r\n                                <h5> {movie.vote_average} / 10 </h5>\r\n                                <h5>Release Date : {movie.release_date} </h5>\r\n                                <h5>Runtime : {movie.runtime} M</h5>\r\n                                <p>{movie.overview}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n              \r\n        <div className=\"container-fluid p-1\">\r\n            <div className=\"col-md-12 line\">\r\n                <h1>Similar Movies</h1>\r\n            </div>\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"row\">\r\n                        {similar.map(simMovie => (\r\n                            <Card data={simMovie} key={simMovie.id} />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n\r\n    return content\r\n\r\n}\r\n\r\nexport default MovieDetails","import React from 'react';\nimport Main from './components/App'\nimport './App.css';\nimport {Router  , Switch, Route} from 'react-router-dom'\nimport Navbar from './components/Navbar'\nimport Search from './components/Search'\nimport history from './components/history'\nimport MovieDetails from './components/MovieDetails'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Router history={history}>\n            <Navbar />\n            <Main />\n            <Switch>\n                <Route path='/' component={Main}/>\n                <Route path='/React-Movies/' component={Main}/>\n                <Route path='/search/:query' component={Search}   />\n                <Route path='/movie/:id' component={MovieDetails}   />\n            </Switch>\n        </Router >\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}